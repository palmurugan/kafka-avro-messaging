import com.github.davidmc24.gradle.plugin.avro.GenerateAvroJavaTask

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id "com.github.davidmc24.gradle.plugin.avro" version '1.9.1'
}

group = 'com.pal.poc.kafka.avro'
version = '0.0.1'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://packages.confluent.io/maven/' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.kafka:spring-kafka'

	implementation 'io.confluent:kafka-avro-serializer:7.7.1'
	implementation 'io.confluent:kafka-schema-registry-client:7.7.1'
	implementation 'org.apache.avro:avro:1.12.0'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

def generateAvro = tasks.register("generateAvro", GenerateAvroJavaTask) {
	source("src/main/resources/avro")
	outputDir = file("src/main/java")
}

tasks.named('test') {
	useJUnitPlatform()
}
